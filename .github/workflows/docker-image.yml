name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build_and_push:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build -t cookiemonster073/server -f Dockerfile.dev .
      

    - name: Test the image created
      run: docker run cookiemonster073/server npm test -- --coverage

    - name: Decrypt the env file
      env:
        password1: ${{secrets.SECRET_KEY}}
      run: openssl enc -aes256 -d -in .enc -out .env -k $password1

    - name: Decrypt service account
      env:
        password2: ${{secrets.SERVICE_KEY}}
      run: openssl enc -aes256 -d -in serviceAccount.json.enc -out serviceAccount.json -k $password2

      #checking if gcp sdk is intalled
      #if it is, then remove it
      #then, install it again and enter gcp credentials
    - name: Install GCP
      run: if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi

    - name: Set up GCP environment
      run: source $HOME/google-cloud-sdk/path.bash.inc

    - name: GCP auth
      run: gcloud auth activate-service-account --key-file serviceAccount.json

    - name: GCP project setup
      run: gcloud config set project e-shop-331108

    - name: GCP zone setup
      run: gcloud config set compute/zone europe-west1-d

    - name: Logging into docker hub
      env:
        dockerid: ${{secrets.DOCKERID}}
        dockerpass: ${{secrets.DOCKERPASS}}
      run:
        echo "$dockerpass" | docker login --username "$dockerid" --password-stdin 

    - name: Building a production grade dockerfile
      run:
        docker build -t cookiemonster073/server .
        
    - name: Pushing docker image to docker hub
      run:
        docker image push --all-tags docker.io/cookiemonster073/server

    - name: Deploy
      run: bash ./deploy.sh